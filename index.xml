<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ü™¥ Vulcan Public Knowledge Garden on</title><link>https://vlcn-io.github.io/knowledgebase/</link><description>Recent content in ü™¥ Vulcan Public Knowledge Garden on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vlcn-io.github.io/knowledgebase/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.</description></item><item><title>Deploying Quartz to the Web</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title>Callouts</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>CJK + Latex Support (ÊµãËØï)</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support Âá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ
Ïö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.
ÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ
Latex Block math works with two dollar signs $$.</description></item><item><title>Configuration</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>converting relations to hierarchies</title><link>https://vlcn-io.github.io/knowledgebase/converting-relations-to-hierarchies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/converting-relations-to-hierarchies/</guid><description>Applications generally need their data in a hierarchical format. E.g., a UI is a tree where data is passed down the tree to hydrate components.</description></item><item><title>Custom Domain</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>data model maturity curve</title><link>https://vlcn-io.github.io/knowledgebase/data-model-maturity-curve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/data-model-maturity-curve/</guid><description>Data models in UI applications go through a maturity curve.
They start as fully in-memory with some lazy persist of the entire blob over the network Fully in-memory with the blob split up into chunks that can go over the network These chunks are specific to the application data format Fully in-memory, chunked networking Fully in-memory with some lazy local persist to disk + lazy persist over network This is to facilitate faster initial startup</description></item><item><title>DB cache</title><link>https://vlcn-io.github.io/knowledgebase/DB-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/DB-cache/</guid><description>The JS integration currently makes use of a DB Cache. This cache only serves to collapse duplicate queries, made in the same event loop tick, into a single query.</description></item><item><title>differential data flow</title><link>https://vlcn-io.github.io/knowledgebase/differential-data-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/differential-data-flow/</guid><description>Resources https://github.com/TimelyDataflow/differential-dataflow https://github.com/wotbrew/relic</description></item><item><title>fully synchronous reactivity</title><link>https://vlcn-io.github.io/knowledgebase/fully-synchronous-reactivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/fully-synchronous-reactivity/</guid><description>A problem that is introduced once an app moves from having all data in-memory to having to page some data to disk is that all access to that data suddenly becomes async.</description></item><item><title>Hosting with Docker</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/docker/</guid><description>If you want to host Quartz on a machine without using a webpage hosting service, it may be easier to install Docker Compose and follow the instructions below than to install Quartz&amp;rsquo;s dependencies manually.</description></item><item><title>Ignoring Notes</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Incremental View Maintenance</title><link>https://vlcn-io.github.io/knowledgebase/Incremental-View-Maintenance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Incremental-View-Maintenance/</guid><description>Most apps are read, not write, heavy. Incremental view maintenance lets us shift work to deal with this reality. We can do more work on write in order to save time on read.</description></item><item><title>IndexedDB slow transactions</title><link>https://vlcn-io.github.io/knowledgebase/IndexedDB-slow-transactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/IndexedDB-slow-transactions/</guid><description>https://github.com/rhashimoto/wa-sqlite/discussions/86</description></item><item><title>inverted database</title><link>https://vlcn-io.github.io/knowledgebase/inverted-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/inverted-database/</guid><description>The reactivity problem is a matter of answering the question:
For a given write, what queries are invalidated by that write?</description></item><item><title>June 26-30, 2023</title><link>https://vlcn-io.github.io/knowledgebase/June-26-30-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/June-26-30-2023/</guid><description>[[prioritization legend]]
P1 Fly.io Cache prepared statements for virtual table insert and read to improve vtab perf Enable re-insertion P2 Overtone / Riffle.</description></item><item><title>keeping your data model synchronous</title><link>https://vlcn-io.github.io/knowledgebase/keeping-your-data-model-synchronous/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/keeping-your-data-model-synchronous/</guid><description>A problem that is introduced once an app moves from having all data in-memory to having to page some data to disk is that all access to that data suddenly becomes async.</description></item><item><title>prioritization legend</title><link>https://vlcn-io.github.io/knowledgebase/prioritization-legend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/prioritization-legend/</guid><description> P1 - Will definitely get done P2 - At least 50% of these will get done P3 - If there&amp;rsquo;s any extra time</description></item><item><title>product vision</title><link>https://vlcn-io.github.io/knowledgebase/product-vision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/product-vision/</guid><description>Client crdts for local writes but we still need server overrides and strong consistency and &amp;ldquo;optimistic only&amp;rdquo; tables / rows What about CRDT fields that should be &amp;ldquo;set together&amp;rdquo; JSON story (property table) Reactivity Functional Relational Programming Rich text [[converting relations to hierarchies|hierarchical fetch]] Multiple consistency models CRDT / Causal Strongly consistent, read-only, mirrored tables Mirrored tables which allow client-side optimistic writes Strongly consistent, read/write, mirrored tables Storage What if the entire DB can&amp;rsquo;t fit on device?</description></item><item><title>Quartz Philosophy</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/philosophy/</guid><description>‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>react integration</title><link>https://vlcn-io.github.io/knowledgebase/react-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/react-integration/</guid><description>cr-sqlite is integrated to React via useQuery hooks. docs
Main considerations: opening IndexedDB transactions is expensive. Hence we must gather all useQuery requests in a given render pass and issue them in a single transaction useQuery must be reactive.</description></item><item><title>Search</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/search/</guid><description>Quartz supports two modes of searching through content.
Full-text Full-text search is the default in Quartz. It produces results that exactly match the search query.</description></item><item><title>Showcase</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard Data Dictionary üß† sspaeti.</description></item><item><title>Troubleshooting and FAQ</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>Updating</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item><item><title>weekly</title><link>https://vlcn-io.github.io/knowledgebase/weekly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/weekly/</guid><description> [[June 26-30, 2023]]</description></item></channel></rss>