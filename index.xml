<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>🪴 Vulcan Public Knowledge Garden on</title><link>https://vlcn-io.github.io/knowledgebase/</link><description>Recent content in 🪴 Vulcan Public Knowledge Garden on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vlcn-io.github.io/knowledgebase/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.</description></item><item><title>Deploying Quartz to the Web</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/blogs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/blogs/</guid><description>1 table priority from #blog sort priority asc</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/blurring-the-client-server-boundary-might-be-a-mistake/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/blurring-the-client-server-boundary-might-be-a-mistake/</guid><description>Thinking along the lines of GraphQL &amp;amp; Relay which may blend it but still make it obvious by requiring fragments to be declared statically.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/evolution-of-data-compute-use-colocation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/evolution-of-data-compute-use-colocation/</guid><description>90s: User, data, compute colocated Cloud: data &amp;amp; compute colocated. User separated. Map-Reduce: Data distributed, compute moved to data, user separated.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/logging/</guid><description>#project
TS components need more logging.
Winston for both browser and server.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/north-star/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/north-star/</guid><description>The embedded database for the application needs of the next three decades.
Reactive Synced Offlinable RLS Tightly integrated into host languages Tiered storage Mixed Consistency Support A full developer experience centered around the DB.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/projects/</guid><description>1 table priority from #project sort priority asc re-insertion primary key modifications (delete then insert) gh issue list</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/roadmap/</guid><description>The goal is to create the embedded database of the next generation. Embedded databases for application development have not kept up with the changing landscape of:</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/rx-cache-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/rx-cache-design/</guid><description>In other vault.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/server-side-sqlite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/server-side-sqlite/</guid><description>I&amp;rsquo;d be curious to hear how your experience with Turso &amp;amp; D1 is. Turso looks interesting since it&amp;rsquo;s a fully managed solution but IIRC it doesn&amp;rsquo;t really do interactive transactions.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/shared-access-handle-pool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/shared-access-handle-pool/</guid><description>official sqlite impl: https://sqlite.org/forum/forumpost/dc2f39cd5cf1bfc4 speed tests: https://sqlite.org/forum/forumpost/1d767118bc077703</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/sqlite-speed-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/sqlite-speed-tests/</guid><description>https://sqlite.org/forum/forumpost/1d767118bc077703</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/Untitled-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Untitled-1/</guid><description>We&amp;rsquo;ll start by creating a new set of primitives for networking atop the existing crsql_changes table. This will be a higher level set of primitives that make authoring network layers simpler.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/Untitled-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Untitled-2/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import &amp;#34;.</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/Untitled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Untitled/</guid><description>rustup toolchain install nightly-x86_64-pc-windows-gnu</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/vanilla-fetch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/vanilla-fetch/</guid><description>#project
Unlock this pattern with [[TreeQL]]</description></item><item><title/><link>https://vlcn-io.github.io/knowledgebase/vscode-semantic-highlighting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/vscode-semantic-highlighting/</guid><description>https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide
Yes, you can indeed install a Visual Studio Code extension from a local directory. Here&amp;rsquo;s how:
First, make sure you have Node.</description></item><item><title>0.15 release notes</title><link>https://vlcn-io.github.io/knowledgebase/0.15-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/0.15-release-notes/</guid><description>clset / re-insertion
2x reduction in metadata weight
vtab syntax
native ios builds</description></item><item><title>Aug 07-11 2023</title><link>https://vlcn-io.github.io/knowledgebase/Aug-07-11-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Aug-07-11-2023/</guid><description>P1 _Felipe reply
alert on extension version mismatch in the backwards direction. e.g., db ahead of ext</description></item><item><title>Aug 14-18 2023</title><link>https://vlcn-io.github.io/knowledgebase/Aug-14-18-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Aug-14-18-2023/</guid><description>P1 nwrk
outbound stream vtab inbound stream vtab syntax
CLSet vtab CausalLog vtab Fugue vtab?</description></item><item><title>Aug 21-25</title><link>https://vlcn-io.github.io/knowledgebase/Aug-21-25-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Aug-21-25-2023/</guid><description>P1 Y fractindex diff?
Litefs
Now update Strut to use it via new ws-server RX-Cache</description></item><item><title>Aug 28-1</title><link>https://vlcn-io.github.io/knowledgebase/Aug-28-1-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Aug-28-1-2023/</guid><description>[[Aug 21-25 2023|prev]]
P1 Compact primary keys litefs rx causal log sequence optimized db version tracking Notes</description></item><item><title>Beyond CRDTs, the next frontier of local-first</title><link>https://vlcn-io.github.io/knowledgebase/Beyond-CRDTs-The-Next-Frontier-of-Local-First/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Beyond-CRDTs-The-Next-Frontier-of-Local-First/</guid><description>#presentation
[[lofi presentations]]
A major problem, and the one receiving the most attention, in collaborative &amp;amp; local-first software is figuring out how to merge concurrent edits between users.</description></item><item><title>bloom filters for row level security</title><link>https://vlcn-io.github.io/knowledgebase/bloom-filters-for-row-level-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/bloom-filters-for-row-level-security/</guid><description>Bloom filters don&amp;rsquo;t so much implement the security mechanism as they enable tracking dirty bits so we can still incrementally send updates after privacy invalidations rather than requiring full re-pulls.</description></item><item><title>Callouts</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>CJK + Latex Support (测试)</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
Latex Block math works with two dollar signs $$.</description></item><item><title>client defined query based sync</title><link>https://vlcn-io.github.io/knowledgebase/client-defined-query-based-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/client-defined-query-based-sync/</guid><description>How much data does the client device need?
Whole database replication may be untenable for situations where the user&amp;rsquo;s devices have different storage profiles Whole database replication is a non-starter for traditional application architectures and all data for all users in the same db Whole db replication doesn&amp;rsquo;t make sense when sharing is not at the DB level Another issue is what data to prioritize for sync / fetch and when.</description></item><item><title>Configuration</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>converting relations to hierarchies</title><link>https://vlcn-io.github.io/knowledgebase/converting-relations-to-hierarchies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/converting-relations-to-hierarchies/</guid><description>#blog
Applications generally need their data in a hierarchical format. E.g., a UI is a tree where data is passed down the tree to hydrate components.</description></item><item><title>Custom Domain</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>data model maturity curve</title><link>https://vlcn-io.github.io/knowledgebase/data-model-maturity-curve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/data-model-maturity-curve/</guid><description>#blog
Data models in UI applications go through a maturity curve.
They start as fully in-memory with some lazy persist of the entire blob over the network Fully in-memory with the blob split up into chunks that can go over the network These chunks are specific to the application data format Fully in-memory, chunked networking Fully in-memory with some lazy local persist to disk + lazy persist over network This is to facilitate faster initial startup</description></item><item><title>dataview into hugo</title><link>https://vlcn-io.github.io/knowledgebase/dataview-into-hugo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/dataview-into-hugo/</guid><description>https://github.com/blacksmithgu/obsidian-dataview/issues/42
Looks like people use templater to generate static markdown and refresh on occasion:
1 2 3 4 5 &amp;lt;%* const dv = app.</description></item><item><title>DB cache</title><link>https://vlcn-io.github.io/knowledgebase/DB-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/DB-cache/</guid><description>#project
The JS integration currently makes use of a DB Cache. This cache only serves to collapse duplicate queries, made in the same event loop tick, into a single query.</description></item><item><title>db from scratch</title><link>https://vlcn-io.github.io/knowledgebase/db-from-scratch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/db-from-scratch/</guid><description>#project
Start with kv store:
https://github.com/cberner/redb SQL interpreter on top:
pull vtab mechanism from SQLite?</description></item><item><title>debug tools</title><link>https://vlcn-io.github.io/knowledgebase/debug-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/debug-tools/</guid><description>#project
Number of queries per event loop tick Query log Component update log (which component, which query caused it, which event caused the query) FPS meter Number of queries per UI event Way there &amp;ndash; Adopt Riffle and the reactive graph?</description></item><item><title>differential data flow</title><link>https://vlcn-io.github.io/knowledgebase/differential-data-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/differential-data-flow/</guid><description>Resources https://github.com/TimelyDataflow/differential-dataflow https://github.com/wotbrew/relic</description></item><item><title>front page story</title><link>https://vlcn-io.github.io/knowledgebase/front-page-story/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/front-page-story/</guid><description>#project
Relational: Defining tables Reactive: Querying tables / react integration Replicated: CRR Upgrade Real-time: something something lazy Transactional?</description></item><item><title>fully synchronous reactivity</title><link>https://vlcn-io.github.io/knowledgebase/fully-synchronous-reactivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/fully-synchronous-reactivity/</guid><description>#blog #project
A problem that is introduced once an app moves from having all data in-memory to having to page some data to disk is that all access to that data suddenly becomes async.</description></item><item><title>Hosting with Docker</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/docker/</guid><description>If you want to host Quartz on a machine without using a webpage hosting service, it may be easier to install Docker Compose and follow the instructions below than to install Quartz&amp;rsquo;s dependencies manually.</description></item><item><title>Ignoring Notes</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Incremental View Maintenance</title><link>https://vlcn-io.github.io/knowledgebase/Incremental-View-Maintenance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Incremental-View-Maintenance/</guid><description>#project
Most apps are read, not write, heavy. Incremental view maintenance lets us shift work to deal with this reality. We can do more work on write in order to save time on read.</description></item><item><title>incrementalism</title><link>https://vlcn-io.github.io/knowledgebase/incrementalism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/incrementalism/</guid><description>Every write to the database receives a corresponding database version. The database version is a continuously increasing 64 bit int. It increase on every transaction.</description></item><item><title>IndexedDB slow transactions</title><link>https://vlcn-io.github.io/knowledgebase/IndexedDB-slow-transactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/IndexedDB-slow-transactions/</guid><description>https://github.com/rhashimoto/wa-sqlite/discussions/86</description></item><item><title>ink and switch lofi notes</title><link>https://vlcn-io.github.io/knowledgebase/ink-and-switch-lofi-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/ink-and-switch-lofi-notes/</guid><description>https://www.inkandswitch.com/local-first/
In this article we propose “local-first software”: a set of principles for software that enables both collaboration and ownership for users</description></item><item><title>inverted database</title><link>https://vlcn-io.github.io/knowledgebase/inverted-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/inverted-database/</guid><description>#project
The reactivity problem is a matter of answering the question:
For a given write, what queries are invalidated by that write?</description></item><item><title>July 03-07, 2023</title><link>https://vlcn-io.github.io/knowledgebase/July-03-07-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/July-03-07-2023/</guid><description>[[prioritization legend]]
P1 Fly.io Finish prepared statement caching to improve vtab perf Finish re-insertion Version comparison must now take into account causal length Backup and restore thoughts?</description></item><item><title>july 10-14, 2023</title><link>https://vlcn-io.github.io/knowledgebase/july-10-14-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/july-10-14-2023/</guid><description>https://github.com/sqlite/sqlite/blob/master/src/prepare.c#L684
test that cache is not growing w/o bound? you have a cache test tho righ?
CRDT Base p1: re-insertion p1: col level trigger rather than table level so we can deal with pk adjustment p1: warn on auto-increment use p1: automigrator stability p2: unpack columns table valued function p2: vtab syntax p2: turso crsqlite direct from browser vite-express rather than forking a process?</description></item><item><title>July 17-21, 2023</title><link>https://vlcn-io.github.io/knowledgebase/July-17-21-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/July-17-21-2023/</guid><description>XCode &amp;amp; SQLite static Other SQLite iOS thoughts https://medium.com/capital-one-tech/experimenting-with-sqlite-in-ios-ae9dec92dba Refs: https://github.com/swiftlyfalling/SQLiteLib https://stackoverflow.com/questions/823706/compiling-custom-sqlite-for-an-iphone-app https://github.com/groue/GRDB.swift/blob/master/Documentation/CustomSQLiteBuilds.md libsql close hook - https://github.</description></item><item><title>July 24-28, 2023</title><link>https://vlcn-io.github.io/knowledgebase/July-24-28-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/July-24-28-2023/</guid><description>Re-insert
Compressed metadata
VTab syntax
Fugue
Expo bindings, prepare statement</description></item><item><title>July 31-04 2023</title><link>https://vlcn-io.github.io/knowledgebase/July-31-04-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/July-31-04-2023/</guid><description>P1 Expo demo incremental sync fix Reply to James on hooks Reply about hrly rate Finish re-insertion 😬 Finish vtab syntax Finish migrator bugs Cut metadata weight Resolve TypedSQL bugs in Overtone (overlap with other sql tags, mainly) Add undo/redo to vite-starter presence and temp tables&amp;hellip; sah pool migration no asyncify?</description></item><item><title>June 26-30, 2023</title><link>https://vlcn-io.github.io/knowledgebase/June-26-30-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/June-26-30-2023/</guid><description>[[prioritization legend]]
P1 Fly.io Cache prepared statements for virtual table insert and read to improve vtab perf Enable re-insertion Backup and restore?</description></item><item><title>keeping your data model synchronous</title><link>https://vlcn-io.github.io/knowledgebase/keeping-your-data-model-synchronous/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/keeping-your-data-model-synchronous/</guid><description>#blog
A problem that is introduced once an app moves from having all data in-memory to having to page some data to disk is that all access to that data suddenly becomes async.</description></item><item><title>licensing example</title><link>https://vlcn-io.github.io/knowledgebase/licensing-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/licensing-example/</guid><description>https://rocicorp.dev/terms.html
1 2 3 4 5 6 License pings Per Replicache Pricing, we charge post-funding/revenue commercial customers based on Monthly Active Browser Profiles, meaning unique browser instances that instantiate Replicache in a calendar month.</description></item><item><title>lofi presentations</title><link>https://vlcn-io.github.io/knowledgebase/lofi-presentations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/lofi-presentations/</guid><description> [[Beyond CRDTs, The Next Frontier of Local-First]] [[ink and switch lofi notes]]</description></item><item><title>mem -> disk -> network</title><link>https://vlcn-io.github.io/knowledgebase/mem-disk-network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/mem-disk-network/</guid><description>We&amp;rsquo;re issuing SQL.
There&amp;rsquo;s three levels of data availability:
Memory Disk Network One way to approach this is to try to make it all transparent to the dev:</description></item><item><title>Oct 2-6 2023</title><link>https://vlcn-io.github.io/knowledgebase/Oct-2-6-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Oct-2-6-2023/</guid><description>P1 CID for compact Rowid fixup PKs compact extra test for expected results LSM tree for materialite SQLite walls blog?</description></item><item><title>Oct 9-13 2023</title><link>https://vlcn-io.github.io/knowledgebase/Oct-9-13-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Oct-9-13-2023/</guid><description>P1 CID for compact rowid fixup? PKs compact against expected results? Writing Reactivity from the main thread 1.</description></item><item><title>prioritization legend</title><link>https://vlcn-io.github.io/knowledgebase/prioritization-legend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/prioritization-legend/</guid><description> P1 - Will definitely get done P2 - At least 50% of these will get done P3 - If there&amp;rsquo;s any extra time</description></item><item><title>product vision</title><link>https://vlcn-io.github.io/knowledgebase/product-vision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/product-vision/</guid><description>Client crdts for local writes but we still need server overrides and strong consistency and &amp;ldquo;optimistic only&amp;rdquo; tables / rows What about CRDT fields that should be &amp;ldquo;set together&amp;rdquo; JSON story (property table) Reactivity Functional Relational Programming Rich text [[converting relations to hierarchies|hierarchical fetch]] Multiple consistency models CRDT / Causal Strongly consistent, read-only, mirrored tables Mirrored tables which allow client-side optimistic writes Strongly consistent, read/write, mirrored tables Storage What if the entire DB can&amp;rsquo;t fit on device?</description></item><item><title>Quartz Philosophy</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>react integration</title><link>https://vlcn-io.github.io/knowledgebase/react-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/react-integration/</guid><description>#doc
cr-sqlite is integrated to React via useQuery hooks. docs
Main considerations: opening IndexedDB transactions is expensive. Hence we must gather all useQuery requests in a given render pass and issue them in a single transaction useQuery must be reactive.</description></item><item><title>row level security</title><link>https://vlcn-io.github.io/knowledgebase/row-level-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/row-level-security/</guid><description>How might we implement row level security for the CRDT database?
The big issue is that when privacy changes it can cause a bunch of new data to be visible that never had a write made to it.</description></item><item><title>Search</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/search/</guid><description>Quartz supports two modes of searching through content.
Full-text Full-text search is the default in Quartz. It produces results that exactly match the search query.</description></item><item><title>Sep 11-15 2023</title><link>https://vlcn-io.github.io/knowledgebase/Sep-11-15-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Sep-11-15-2023/</guid><description>P1 Video SQLite as a collaborative application file format Strut staring it off Tab sync CRR Local-only (undo, selection state) Sort Constant events / metadata size Schema change &amp;amp; reload &amp;amp; auto-migrate Table is sensitive to schema?</description></item><item><title>Sep 18-22 2023</title><link>https://vlcn-io.github.io/knowledgebase/Sep-18-22-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Sep-18-22-2023/</guid><description>P1 Feedback https://expo.notion.site/CRSqlite-REST-syncing-example-69b0d4423d5547c98f24b80fe2323071
Metadata weight pk finalize
JS has cr-sqlite as sub-repo
RX Demo</description></item><item><title>Sep 25-29 2023</title><link>https://vlcn-io.github.io/knowledgebase/Sep-25-29-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Sep-25-29-2023/</guid><description>P1 Turso Close hook doesn&amp;rsquo;t exists for loadable extensions? fails to compile integration check for turso? Just move on to latest commits with newer integration check?</description></item><item><title>Sep 4-8 2023</title><link>https://vlcn-io.github.io/knowledgebase/Sep-4-8-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/Sep-4-8-2023/</guid><description>[[Aug 28-1 2023|prev]]
P1 Metadata Compact out primary keys Compact out col names Bugs Fix fractindex view update x set after_id = y where id = z Fix error message when using vtab syntax next_db_version optimization automigrate error messaging notify if someone overrides commit hook?</description></item><item><title>server overrides</title><link>https://vlcn-io.github.io/knowledgebase/server-overrides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/server-overrides/</guid><description>#project
&amp;ldquo;server overrides&amp;rdquo; or [[server authoritative]] data is the means to allow the server to overrule clients.
Users can implement this in user-space by processing the changeset log before applying it and throwing out changes they do not agree with.</description></item><item><title>Showcase</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard Data Dictionary 🧠 sspaeti.</description></item><item><title>signia</title><link>https://vlcn-io.github.io/knowledgebase/signia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/signia/</guid><description> https://twitter.com/jitl/status/1689656021264855040
signals on query results? diff query results?</description></item><item><title>streaming reactivity</title><link>https://vlcn-io.github.io/knowledgebase/streaming-reactivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/streaming-reactivity/</guid><description>From Jerome ( https://discord.com/channels/989870439897653248/989870440585494530/1128026067819561084):
basically, to support any queries (even very complex ones), we have to check if anything was upserted or deleted on every change.</description></item><item><title>sync is hard</title><link>https://vlcn-io.github.io/knowledgebase/sync-is-hard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/sync-is-hard/</guid><description>Sync that allows:
offline editing realtime collaboration Is harder than it should be. The infra to make it possible is just missing.</description></item><item><title>sync server plans</title><link>https://vlcn-io.github.io/knowledgebase/sync-server-plans/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/sync-server-plans/</guid><description>Starting from our websocket sync server &amp;ndash; https://github.com/vlcn-io/cr-sqlite/pull/316
Create native inbound and outbound stream abstractions as documented in https://github.com/vlcn-io/cr-sqlite/issues/38 create server + rest api for strongly consistent stuff expose rest API as vtab?</description></item><item><title>tables used</title><link>https://vlcn-io.github.io/knowledgebase/tables-used/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/tables-used/</guid><description>SQLite get_tables_used is very slow. We need to calculate this statically or cache all prepared versions of tables_used and the result(s).</description></item><item><title>theoretical sqlite wasm speed</title><link>https://vlcn-io.github.io/knowledgebase/theoretical-sqlite-wasm-speed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/theoretical-sqlite-wasm-speed/</guid><description>https://gist.github.com/tantaman/28f1fc4cb7ccc0012bf3bd8ccca76eed
[[tables used]] is deathly slow. preparing queries is slow. thread TODO:
with OPFS enabled &amp;ndash; how long those same tests take with Roy&amp;rsquo;s lock_mode_exclusive + shared access handle approach can we WAL mode this?</description></item><item><title>tinybase</title><link>https://vlcn-io.github.io/knowledgebase/tinybase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/tinybase/</guid><description>#project
Needs to only ingest synced row on sync
Needs to only saved modified rows on persist</description></item><item><title>TreeQL</title><link>https://vlcn-io.github.io/knowledgebase/TreeQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/TreeQL/</guid><description>#project
Related: [[type safe sql]]
Hypothesis: Apps want their data in a hierarchical format.
Nit: this could also be an artifact of react render cycles and asynchrony</description></item><item><title>Troubleshooting and FAQ</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>ts ast</title><link>https://vlcn-io.github.io/knowledgebase/ts-ast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/ts-ast/</guid><description>View the TS AST: https://ts-ast-viewer.com/# and: https://ts-creator.js.org/</description></item><item><title>ts transform plugin</title><link>https://vlcn-io.github.io/knowledgebase/ts-transform-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/ts-transform-plugin/</guid><description>Official support for TS Transformers look dubious: https://github.com/microsoft/TypeScript/issues/14419 https://github.com/microsoft/TypeScript/issues/16607 https://github.com/microsoft/TypeScript/issues/54276
Might be better to do as an ESLint plugin which is stable.</description></item><item><title>type safe sql</title><link>https://vlcn-io.github.io/knowledgebase/type-safe-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/type-safe-sql/</guid><description>#project
People keep writing crappy query builders in order to get type safety in their language of choice.
We can get it by parsing:</description></item><item><title>Updating</title><link>https://vlcn-io.github.io/knowledgebase/quartz-docs/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/quartz-docs/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item><item><title>user promoted to god example</title><link>https://vlcn-io.github.io/knowledgebase/user-promoted-to-god-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/user-promoted-to-god-example/</guid><description>A user is added to the system. The user can only see their data The user is upgraded to admin The user can no see all data on the site.</description></item><item><title>weekly</title><link>https://vlcn-io.github.io/knowledgebase/weekly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/weekly/</guid><description> [[Sep 4-8 2023]] [[Aug 28-1 2023]] [[Aug 21-25 2023]] [[Aug 14-18 2023]] [[Aug 07-11 2023]] [[July 31-04 2023]] [[July 24-28, 2023]] [[July 17-21, 2023]] [[July 10-14, 2023]] [[July 03-07, 2023]] [[June 26-30, 2023]]</description></item><item><title>worker coordinate</title><link>https://vlcn-io.github.io/knowledgebase/worker-coordinate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vlcn-io.github.io/knowledgebase/worker-coordinate/</guid><description>#project
We can coordinate workers through service workers.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 &amp;#34;use strict&amp;#34;; // Install the service worker as soon as possible.</description></item></channel></rss>